{"ast":null,"code":"import OpenAI from \"openai\";\nconst apiKey = \"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\";\nlet idea;\nconst openai = new OpenAI({\n  apiKey: apiKey\n});\nconst runPrompt = (prompt, difficulty) => {\n  prompt = `I am out of ideas for projects. Give me a ${difficulty} creative project and list the languages and/or frameworks along with it. Return this in a json file with the project, languages, frameworks, project description, and features`;\n  projectIdea(prompt);\n};\nasync function projectIdea(prompt) {\n  try {\n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: prompt\n      }],\n      max_tokens: 500,\n      temperature: 1.5\n    });\n    idea = completion.choices[0].message.content;\n    console.log('test');\n    console.log(completion.choices[0].message.content);\n    return completion.choices[0].message.content;\n  } catch (error) {\n    console.error('Error: ', error);\n  }\n}\ne;","map":{"version":3,"names":["OpenAI","apiKey","idea","openai","runPrompt","prompt","difficulty","projectIdea","completion","chat","completions","create","model","messages","role","content","max_tokens","temperature","choices","message","console","log","error","e"],"sources":["/Users/alexnham/Desktop/cs/react/projectCreator/frontend/src/GPT/useGPT.js"],"sourcesContent":["import OpenAI from \"openai\";\nconst apiKey = \"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\";\nlet idea;\nconst openai = new OpenAI({\n    apiKey: apiKey,\n});\n\nconst runPrompt = (prompt, difficulty) => {\n    prompt = `I am out of ideas for projects. Give me a ${difficulty} creative project and list the languages and/or frameworks along with it. Return this in a json file with the project, languages, frameworks, project description, and features`;\n    projectIdea(prompt)\n}\n\n\nasync function projectIdea(prompt) {\ntry {  \nconst completion = await openai.chat.completions.create({\n    model: \"gpt-3.5-turbo\",\n    messages: [\n    {\n        role: \"system\",\n        content: prompt\n    }\n    ],\n    max_tokens: 500,\n    temperature: 1.5\n});\n    idea = completion.choices[0].message.content;\n    console.log('test');\n    console.log(completion.choices[0].message.content);\n    return completion.choices[0].message.content\n    } catch(error) {\n    console.error('Error: ',error);\n}\n}\ne\n\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,MAAMC,MAAM,GAAG,qDAAqD;AACpE,IAAIC,IAAI;AACR,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC;EACtBC,MAAM,EAAEA;AACZ,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGA,CAACC,MAAM,EAAEC,UAAU,KAAK;EACtCD,MAAM,GAAI,6CAA4CC,UAAW,iLAAgL;EACjPC,WAAW,CAACF,MAAM,CAAC;AACvB,CAAC;AAGD,eAAeE,WAAWA,CAACF,MAAM,EAAE;EACnC,IAAI;IACJ,MAAMG,UAAU,GAAG,MAAML,MAAM,CAACM,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACpDC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CACV;QACIC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEV;MACb,CAAC,CACA;MACDW,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACjB,CAAC,CAAC;IACEf,IAAI,GAAGM,UAAU,CAACU,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO;IAC5CK,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAACb,UAAU,CAACU,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO,CAAC;IAClD,OAAOP,UAAU,CAACU,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO;EAC5C,CAAC,CAAC,OAAMO,KAAK,EAAE;IACfF,OAAO,CAACE,KAAK,CAAC,SAAS,EAACA,KAAK,CAAC;EAClC;AACA;AACAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}