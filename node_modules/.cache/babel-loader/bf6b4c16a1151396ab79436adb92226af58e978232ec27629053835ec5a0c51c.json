{"ast":null,"code":"import OpenAI from \"openai\";\nconst apiKey = \"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\";\nlet idea;\nconst openai = new OpenAI({\n  apiKey: apiKey,\n  dangerouslyAllowBrowser: true\n});\nexport const runPrompt = async difficulty => {\n  prompt = `I am out of ideas for projects. Give me a ${difficulty} creative project and list the languages and/or frameworks along with it. Return this in a json file with the project, languages, frameworks, project description, features, and difficulty level. Provide your answer in JSON form. Reply with only the answer in JSON form and include no other commentary:    `;\n  let idea = await projectIdea(prompt);\n  return idea;\n};\nasync function projectIdea(prompt) {\n  try {\n    const completion = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        role: \"system\",\n        content: prompt,\n        response_format: {\n          \"type\": \"json_object\"\n        }\n      }],\n      max_tokens: 500,\n      temperature: 1.5\n    });\n    idea = completion.choices[0].message.content;\n    console.log('test');\n    console.log(completion.choices[0].message.content);\n    return completion.choices[0].message.content;\n  } catch (error) {\n    console.error('Error: ', error);\n  }\n}","map":{"version":3,"names":["OpenAI","apiKey","idea","openai","dangerouslyAllowBrowser","runPrompt","difficulty","prompt","projectIdea","completion","chat","completions","create","model","messages","role","content","response_format","max_tokens","temperature","choices","message","console","log","error"],"sources":["/Users/alexnham/Desktop/cs/react/projectCreator/frontend/src/GPT/useGPT.js"],"sourcesContent":["import OpenAI from \"openai\";\nconst apiKey = \"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\";\nlet idea;\nconst openai = new OpenAI({\n    apiKey: apiKey, dangerouslyAllowBrowser: true \n});\n\nexport const runPrompt = async (difficulty) => {\n    prompt = `I am out of ideas for projects. Give me a ${difficulty} creative project and list the languages and/or frameworks along with it. Return this in a json file with the project, languages, frameworks, project description, features, and difficulty level. Provide your answer in JSON form. Reply with only the answer in JSON form and include no other commentary:    `;\n    let idea = await projectIdea(prompt)\n    return idea\n}\n\n\nasync function projectIdea(prompt) {\ntry {  \nconst completion = await openai.chat.completions.create({\n    model: \"gpt-3.5-turbo\",\n    messages: [\n    {\n        role: \"system\",\n        content: prompt,\n        response_format:{ \"type\": \"json_object\" }\n    }\n    ],\n    max_tokens: 500,\n    temperature: 1.5\n});\n    idea = completion.choices[0].message.content;\n    console.log('test');\n    console.log(completion.choices[0].message.content);\n    return completion.choices[0].message.content\n    } catch(error) {\n    console.error('Error: ',error);\n}\n}\n\n\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,MAAMC,MAAM,GAAG,qDAAqD;AACpE,IAAIC,IAAI;AACR,MAAMC,MAAM,GAAG,IAAIH,MAAM,CAAC;EACtBC,MAAM,EAAEA,MAAM;EAAEG,uBAAuB,EAAE;AAC7C,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,MAAOC,UAAU,IAAK;EAC3CC,MAAM,GAAI,6CAA4CD,UAAW,mTAAkT;EACnX,IAAIJ,IAAI,GAAG,MAAMM,WAAW,CAACD,MAAM,CAAC;EACpC,OAAOL,IAAI;AACf,CAAC;AAGD,eAAeM,WAAWA,CAACD,MAAM,EAAE;EACnC,IAAI;IACJ,MAAME,UAAU,GAAG,MAAMN,MAAM,CAACO,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;MACpDC,KAAK,EAAE,eAAe;MACtBC,QAAQ,EAAE,CACV;QACIC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAET,MAAM;QACfU,eAAe,EAAC;UAAE,MAAM,EAAE;QAAc;MAC5C,CAAC,CACA;MACDC,UAAU,EAAE,GAAG;MACfC,WAAW,EAAE;IACjB,CAAC,CAAC;IACEjB,IAAI,GAAGO,UAAU,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL,OAAO;IAC5CM,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnBD,OAAO,CAACC,GAAG,CAACd,UAAU,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL,OAAO,CAAC;IAClD,OAAOP,UAAU,CAACW,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACL,OAAO;EAC5C,CAAC,CAAC,OAAMQ,KAAK,EAAE;IACfF,OAAO,CAACE,KAAK,CAAC,SAAS,EAACA,KAAK,CAAC;EAClC;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}